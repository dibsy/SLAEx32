/*
# Date: 17.04.2019
# Author: Dibyendu Sikdar
# PA-1191
# Homepage: https://github.com/dibsy
# Description: chdir() implementation
# Tested on: i686 GNU/Linux
# Please note : The chdir command works, but only inside your program. Once you exit it, you're back to the parent shell current directory.
# Reference :  https://stackoverflow.com/questions/42340588/why-isnt-chdir-working
# Shellcode Length: 26
#
# Disassembly of section .text:
#
# 08048060 <_start>:
# 8048060:	31 c0                	xor    eax,eax
# 8048062:	31 db                	xor    ebx,ebx
# 8048064:	50                   	push   eax
# 8048065:	b0 0c                	mov    al,0xc
# 8048067:	68 2f 65 74 63       	push   0x6374652f
# 804806c:	68 2f 2f 2f 2f       	push   0x2f2f2f2f
# 8048071:	89 e3                	mov    ebx,esp
# 8048073:	cd 80                	int    0x80
# 8048075:	31 c0                	xor    eax,eax
# 8048077:	40                   	inc    eax
# 8048078:	cd 80                	int    0x80
#
#
# execve("./chdir", ["./chdir"], [/* 41 vars *]) = 0 ; Removed one slash else it is interpreted as end of comment block
# chdir("/////etc")                       = 0
# _exit(-1079856636)                      = ?
#
#
# Compile : gcc chdir.c -o chdir -zexecstack -fno-stack-protector 
*/
#include <stdio.h>
#include <string.h>
unsigned char shellcode[]=
"\x31\xc0\x31\xdb\x50\xb0\x0c\x68\x2f\x65\x74\x63\x68\x2f\x2f\x2f\x2f\x89\xe3\xcd\x80\x31\xc0\x40\xcd\x80";
int main()
{
    printf("Shellcode size: %d\n", strlen(shellcode));
    int (*ret)() = (int(*)())shellcode;
    ret();
}

